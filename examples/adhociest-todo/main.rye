
rye .needs { fyne }

Data: context {

	add!: fn { task } { tasks .add-rows! task }
	remove!: fn { idx } { tasks .remove-row! idx + 1 }
	check!: fn { idx val } { tasks .update-row! idx + 1 dict [ "done" val ] }
	make-table!: fn { texts } { .map { ::x [ 0 x ] } |unpack |table* { "done" "text" } |ref |change! 'tasks }
	
	var 'tasks ref table { "done" "text" } { }
}

rye .args\raw .split "," |Data/make-table!

do\par fyne { 

	win: app .window "Adhocest TODO app"

	lst: list
	does { 1 } ; length? deref Data/tasks , 0 }
	does {
		print "1"
;		idx: hide label "idx"
		h-box [
			; check "" fn\par { v } current
			; { Data/check! to-integer idx .text? v , lst .refresh }
;			label ""
			; idx
			; layout-spacer
			; button-with-icon "" delete-icon fn\par { } current
			; { Data/remove! to-integer idx .text? , lst .refresh }
		]
	}
	fn { i box } { 
;		set! box .objects? { chk lbl hdn xo btn }
;		chk .set-checked 0 <- i <- deref Data/tasks
;		lbl .set-text 1 <- i <- deref Data/tasks
;		hdn .set-text to-string i
	}

	input: entry
	|place-holder! "Add to list here ..."
;	|on-submitted! fn { x } {
;		Data/add! [ 0 x ]
;		input .set-text ""
;		lst .refresh
;	}

	cont: border nil input nil nil [ lst ]
	
	with win {
		.resize size 300.0 300.0 ,
		.set-content cont ,
		.show-and-run
	}
}

